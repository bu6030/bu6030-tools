import re
import json
import matplotlib.pyplot as plt

## 为自己的某个文章，生成LPR图的
data_string = '''
2023/10/20：1年期3.45%，5年以上4.20%，与上月相比持平

2023/09/20：1年期3.45%，5年以上4.20%，与上月相比持平

2023/08/20：1年期3.45%，5年以上4.20%，1 年期降低 10 个 BP（0.10%），5 年期保持不变

2023/07/20：1年期3.55%，5年以上4.20%，与上月相比持平

2023/06/20：1年期3.55%，5年以上4.20%，分别降低 10 个 BP（0.10%）

2023/05/22：1年期3.65%，5年以上4.30%，与上月相比持平

2023/04/20：1年期3.65%，5年以上4.30%，与上月相比持平

2023/03/20：1年期3.65%，5年以上4.30%，与上月相比持平

2023/02/20：1年期3.65%，5年以上4.30%，与上月相比持平

2023/01/20：1年期3.65%，5年以上4.30%，与上月相比持平

2022/12/20：1年期3.65%，5年以上4.30%，与上月相比持平

2022/11/21：1年期3.65%，5年以上4.30%，与上月相比持平

2022/10/20：1年期3.65%，5年以上4.30%，与上月相比持平

2022/09/20：1年期3.65%，5年以上4.30%，与上月相比持平

2022/08/22：1年期3.65%，5年以上4.30%，1 年期降低 5 个 BP（0.05%），5 年期降低 15 个 BP（0.15%）

2022/07/20：1年期3.70%，5年以上4.45%，与上月相比持平

2022/06/20：1年期3.70%，5年以上4.45%，与上月相比持平

2022/05/20：1年期3.70%，5年以上4.45%，1 年期保持不变，5 年期降低 15 个 BP（0.15%）

2022/04/20：1年期3.70%，5年以上4.60%，与上月相比持平

2022/03/21：1年期3.70%，5年以上4.60%，与上月相比持平

2022/02/21：1年期3.70%，5年以上4.60%，与上月相比持平

2022/01/20：1年期3.70%，5年以上4.60%，1 年期降低 10 个 BP（0.10%），5 年期降低 5 个 BP（0.05%）

2021/12/20：1年期3.80%，5年以上4.65%，与上月相比持平

2021/11/22：1年期3.85%，5年以上4.65%，与上月相比持平

2021/10/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/09/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/08/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/07/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/06/21：1年期3.85%，5年以上4.65%，与上月相比持平

2021/05/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/04/20：1年期3.85%，5年以上4.65%，与上月相比持平

2021/03/22：1年期3.85%，5年以上4.65%，与上月相比持平

2021/02/22：1年期3.85%，5年以上4.65%，与上月相比持平

2021/01/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/12/21：1年期3.85%，5年以上4.65%，与上月相比持平

2020/11/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/10/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/09/21：1年期3.85%，5年以上4.65%，与上月相比持平

2020/08/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/07/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/06/22：1年期3.85%，5年以上4.65%，与上月相比持平

2020/05/20：1年期3.85%，5年以上4.65%，与上月相比持平

2020/04/20：1年期3.85%，5年以上4.65%，1 年期降低 20 个 BP（0.20%），5 年期降低 10 个 BP（0.10%）

2020/03/20：1年期4.05%，5年以上4.75%，与上月相比持平

2020/02/20：1年期4.05%，5年以上4.75%，1 年期降低 10 个 BP（0.10%），5 年期降低 5 个 BP（0.05%）

2020/01/20：1年期4.15%，5年以上4.80%，与上月相比持平

2019/12/20：1年期4.15%，5年以上4.80%，与上月相比持平

2019/11/20：1年期4.15%，5年以上4.80%，1 年期降低 5 个 BP（0.05%），5 年期降低 5 个 BP（0.05%）

2019/10/21：1年期4.20%，5年以上4.85%，与上月相比持平

2019/09/20：1年期4.20%，5年以上4.85%，1 年期降低 5 个 BP（0.05%），5 年期保持不变

2019/08/20：1年期4.25%，5年以上4.85%，初始设置也就是第一次设定 LPR 利率
'''

# 使用正则表达式提取日期和利率数据
pattern = r'(\d{4}/\d{2}/\d{2})：1年期([\d.]+)%，5年以上([\d.]+)%'
matches = re.findall(pattern, data_string)

# 构建 JSON 数据
data = []
for match in matches:
    date = match[0]
    one_year = match[1]
    five_year = match[2]
    data.append({"date": date, "one_year": one_year, "five_year": five_year})

# 转换为 JSON 字符串
data = data[::-1]

# 提取日期和利率数据
dates = [item["date"] for item in data]
one_year_rates = [float(item["one_year"]) for item in data]
five_year_rates = [float(item["five_year"]) for item in data]

# 绘制折线图
plt.plot(dates, one_year_rates, label="1 Year")
plt.plot(dates, five_year_rates, label="5 Years")

# 设置图表标题和轴标签
plt.title("Interest Rates Over Time")
plt.xlabel("Date")
plt.ylabel("Interest Rate (%)")

# 设置X轴刻度的显示间隔
plt.xticks(range(0, len(dates), 2))  # 每两个日期显示一个刻度

# 添加图例
plt.legend()

# 自动调整日期标签的显示方式
plt.gcf().autofmt_xdate()

# 显示图表
plt.show()
